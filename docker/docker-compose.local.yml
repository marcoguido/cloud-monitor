version: '3.8'

services:
    php:
        build:
            context: .
            dockerfile: build/local.Dockerfile
            args:
                NODE_MAJOR: 20
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-80}:80'
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        environment:
            APACHE_DOCUMENT_ROOT: '/var/www/html/public'
            PHP_DATE_TIMEZONE: 'Europe/Rome'
            PHP_POOL_NAME: "monitoring_php"
            SSL_MODE: off
            WEBUSER_HOME: '/var/www/html'
        volumes:
            - '../:/var/www/html'
        networks:
            - infrastructure_monitor
        depends_on:
            - pgsql
            - mailpit

    cron:
        build:
            context: .
            dockerfile: build/cli/local.Dockerfile
        command: [ "su", "webuser", "-c", "cd /var/www/html && php artisan schedule:work" ]
        environment:
            AUTORUN_ENABLED: false
            PHP_POOL_NAME: "monitoring_cron"
        volumes:
            - '../:/var/www/html'
        restart: always
        networks:
            - infrastructure_monitor
        depends_on:
            - pgsql

    queue:
        build:
            context: .
            dockerfile: build/cli/local.Dockerfile
        command: [ "su", "webuser", "-c", "cd /var/www/html && php artisan queue:work --sleep=3 --tries=3" ]
        environment:
            AUTORUN_ENABLED: false
            PHP_POOL_NAME: "monitoring_queue"
        volumes:
            - '../:/var/www/html'
        restart: always
        networks:
            - infrastructure_monitor
        depends_on:
            - pgsql

    pgsql:
        ports:
            - '${FORWARD_DB_PORT:-5432}:5432'
        environment:
            PGPASSWORD: '${DB_PASSWORD:-secret}'
            POSTGRES_DB: '${DB_DATABASE}'
            POSTGRES_USER: '${DB_USERNAME}'
            POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
        volumes:
            - './database/postgresql/volume:/var/lib/postgresql/data'
            - './database/postgresql/scripts/create-application-database.sql:/docker-entrypoint-initdb.d/10-create-application-database.sql'
        networks:
            - infrastructure_monitor
        healthcheck:
            test: [ "CMD", "pg_isready", "-q", "-d", "${DB_DATABASE}", "-U", "${DB_USERNAME}" ]
            retries: 3
            timeout: 5s

    mailpit:
        container_name: infrastructure_monitor_mailer
        image: 'axllent/mailpit:latest'
        env_file:
            - ../.env
        ports:
            - '${FORWARD_MAILPIT_PORT:-1025}:1025'
            - '${FORWARD_MAILPIT_DASHBOARD_PORT:-8025}:8025'
        networks:
            - infrastructure_monitor

networks:
    infrastructure_monitor:
        driver: bridge
